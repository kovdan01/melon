name: Build Android

on:
  push:
    branches: develop
  pull_request:
    branches: develop

env:
  CORE_ARM_RELEASE_ARTIFACT: "core-arm-release-android"
  EXACT_NDK_VERSION: "22.1.7171670"

jobs:
  build-core-arm:
    name: ${{ format('{0} {1} {2}', matrix.config.prefix, matrix.config.build_type, matrix.config.suffix) }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: true
      matrix:
        config:
        - {
            os: ubuntu-latest,
            prefix: "Android Core ARM64",
            suffix: "",
            build_type: "Release",
          }

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: "recursive"

    - name: Build
      run: |
        docker build -f build-config/android/Dockerfile . -t build-android
        CONTAINER_ID=`docker run -d build-android`
        docker cp $CONTAINER_ID:/home/builduser/repo/install `pwd`/install

    - name: Tar files
      run: tar -cvf install.tar ./install

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        path: ./install.tar
        name: ${{ env.CORE_ARM_RELEASE_ARTIFACT }}

  build-android:
    name: Android App Debug
    runs-on: ubuntu-latest
    needs: build-core-arm
    env:
      GRADLE_AND_BUILD_CACHE_VERSION: 5  # increment when need to update gradle & build cache

    steps:
    - uses: actions/checkout@v2

    - name: Download pre-built core library from artifacts
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.CORE_ARM_RELEASE_ARTIFACT }}

    - name: Install NDK ${{ env.EXACT_NDK_VERSION }}
      run: |
        sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;${{ env.EXACT_NDK_VERSION }}"

    - name: Copy core library to NDK toolchains
      run: |
        tar -xvf install.tar
        sudo cp -r install/* /usr/local/lib/android/sdk/ndk/${{ env.EXACT_NDK_VERSION }}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/

    - name: Gradle & build cache
      uses: actions/cache@v2
      id: cache_gradle
      with:
        path: |
          src/client-android/.gradle/
          src/client-android/gradle/
          src/client-android/gradlew
          src/client-android/gradlew.bat
          src/client-android/build/
          src/client-android/app/build/
        key: ${{ runner.os }}-gradle-and-build-${{ env.GRADLE_AND_BUILD_CACHE_VERSION }}

    - name: Gradle wrapper
      if: ${{ steps.cache_gradle.outputs.cache-hit != 'true' }}
      shell: sh {0}
      run: |
        cd src/client-android
        gradle wrapper

    - name: Build debug universal apk
      shell: sh {0}
      run: |
        cd src/client-android
        ./gradlew --no-daemon --parallel --build-cache :app:packageDebugUniversalApk

    - name: Upload app universal apk
      uses: actions/upload-artifact@v2
      with:
        path: ./src/client-android/app/build/outputs/universal_apk/debug/app-debug-universal.apk
        name: app-debug
